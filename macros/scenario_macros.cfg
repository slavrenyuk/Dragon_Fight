#textdomain wesnoth-Dragon_Fight

#define SAY_FILTERED FILTER TEXT
  [message]
    {FILTER}
    message={TEXT}
  [/message]
#enddef

#define SAY SPEAKER_ID TEXT
  [message]
    id={SPEAKER_ID}
    message={TEXT}
  [/message]
#enddef

#define ECHO TEXT
  [message]
    speaker=narrator
    message={TEXT}
    image=wesnoth-icon.png
  [/message]
#enddef

# {SAY_RANDOM yes_man (_"Yes",_"OK",_"Good",_"Excellent")}
#define SAY_RANDOM SPEAKER_ID MESSAGES
  [set_variable]
    name=random_message
    rand={MESSAGES}
  [/set_variable]
  {SAY {SPEAKER_ID} $random_message}
  {CLEAR_VARIABLE random_message}
#enddef

# show message with 70% probability -> 'IF_CHANCE 70 ([message]...[/message])'
#define IF_CHANCE PERCENTAGE THEN_WML
  [set_variable]
    name=random_chance
    rand=1..100
  [/set_variable]
  [if]
    {VARIABLE_CONDITIONAL random_chance less_than_equal_to {PERCENTAGE}}
    [then]
      {THEN_WML}
    [/then]
  [/if]
  {CLEAR_VARIABLE random_chance}
#enddef

#define DIALOG_EVENT EVENT_NAME UNIT_FILTER SPEAKER_FILTER TEXT
  [event]
    name={EVENT_NAME}
    [filter]
      {UNIT_FILTER}
    [/filter]
    {SAY_FILTERED {SPEAKER_FILTER} {TEXT}}
  [/event]
#enddef

#define DIALOG_EVENT_SELF EVENT_NAME UNIT_FILTER TEXT
  {DIALOG_EVENT {EVENT_NAME} {UNIT_FILTER} {UNIT_FILTER} {TEXT}}
#enddef

#define VILLAGE_DESCRIPTION VILLAGE_STATE_VARIABLE X Y LABEL ACTIVE_DESCRIPTION INACTIVE_DESCRIPTION
  [label]
    text={LABEL}
    x,y={X},{Y}
  [/label]
  [set_menu_item]
    id={VILLAGE_STATE_VARIABLE}_description
    description= _"Description"
    [filter_location]
      x,y={X},{Y}
    [/filter_location]
    [command]
      [switch]
        variable={VILLAGE_STATE_VARIABLE}
        [case]
          value=$village_active_state
          {ECHO {ACTIVE_DESCRIPTION}}
        [/case]
        [case]
          value=$village_inactive_state
          {ECHO {INACTIVE_DESCRIPTION}}
        [/case]
        [case]
          value=$village_burned_state
          {ECHO (_"This building has been burned by the dragon.")}
        [/case]
      [/switch]
    [/command]
  [/set_menu_item]
#enddef

#define BURN_VILLAGE_EVENT_WITH_EXTRA_WML X Y IMAGE EXTRA_WML
  [event]
    name=moveto
    [filter]
      id=dragon
      x={X}
      y={Y}
    [/filter]
    [animate_unit]
      flag=attack_north_direction
      [filter]
        id=dragon
      [/filter]
    [/animate_unit]
    [terrain]
      [filter]
        x={X}
        y={Y}
      [/filter]
      layer=overlay
      terrain="^"
    [/terrain]
    {PLACE_IMAGE {IMAGE} {X} {Y}}
    {EXTRA_WML}
    [fire_event]
      name=first_village_burned
    [/fire_event]
  [/event]
#enddef

#define FIRST_VILLAGE_BURNED_EVENT
  [event]
    name=first_village_burned
    {SAY_FILTERED (race=human) (_"The dragon is burning our houses!")}
  [/event]
#enddef

#define BURN_SIMPLE_VILLAGE_EVENT X Y IMAGE
  {BURN_VILLAGE_EVENT_WITH_EXTRA_WML {X} {Y} {IMAGE} ()}
#enddef

#define BURN_VILLAGE_EVENT VILLAGE_STATE_VARIABLE VILLAGE_EVENT_ID X Y IMAGE
  {BURN_VILLAGE_EVENT_WITH_EXTRA_WML {X} {Y} {IMAGE}
  (
    {VARIABLE {VILLAGE_STATE_VARIABLE} $village_burned_state}
    [event]
      id={VILLAGE_EVENT_ID}
      remove=yes
    [/event]
  )}
#enddef

#define GIVE_FROSTY_GLOVES
  [object]
    [filter]
      x=39
      y=19
    [/filter]
    silent=yes
    [effect]
      apply_to=attack
      range=melee
      set_type=cold
    [/effect]
  [/object]
  {VARIABLE_OP frosty_gloves_left sub 1}
#enddef

#define GIVE_ARCANE_STICK
  [object]
    [filter]
      x=39
      y=19
    [/filter]
    silent=yes
    [effect]
      apply_to=attack
      range=ranged
      set_type=arcane
    [/effect]
  [/object]
  {VARIABLE_OP arcane_sticks_left sub 1}
#enddef

#define STARTING_DIALOG
  [event]
    name=start
    {SAY mage_adept (_"At last we are alone, dear Merissa.")}
    {SAY dark_adept (_"That's true, honey. You know, I am sick of our 'I-Know-Everything' mentor Rheoran.")}
    {SAY mage_adept (_"Wait, my love. What is that thing in the sky?")}
    [scroll_to_unit]
      id=dragon
    [/scroll_to_unit]
    # dragon lands and roars
    {INCIDENTAL_MUSIC "vengeful.ogg"}
    [move_unit]
      id=dragon
      to_x=46
      to_y=46
    [/move_unit]
    [sound]
      name=dragon-roar.ogg
    [/sound]
    [animate_unit]
      flag=threat
      [filter]
        id=dragon
      [/filter]
    [/animate_unit]
    [animate_unit]
      flag=cast
      [filter]
        id=dragon
      [/filter]
    [/animate_unit]
    [delay]
        time=2000
    [/delay]
    {SAY dark_adept (_"Did you see that too?")}
    {SAY mage_adept (_"Darling, run!")}
    {SAY dark_adept (_"Yes, I will... to the graveyard. And I am going to summon undead in order to protect the town. Now, everybody who hated me because of my dark side will change their mind.")}
    {SAY mage_leader (_"Hurry up, students. I've spent several years on you. And now you will be torn apart, burned and eaten by that monster.")}
    {SAY leader (_"Soldiers! To arms!")}
    {SAY_FILTERED (x,y=20,4) ("Dragon?")}
    # deserter runs away
    [move_unit]
      x=20
      y=4
      to_x=17
      to_y=1
    [/move_unit]
    [kill]
      x,y=17,1
      animate=no
      fire_event=no
    [/kill]
    {SAY leader (_"Deserter!")}
    {SAY mage_leader (_"I always knew that our town guards are just a bunch of cowards. Looks like there isn't much choice for me and my students, other than to engage in the battle. At least there should be a few magic items left in the school that might help us fight the fire dragon.
<span color='#FFFF00' font-style='italic'>(There are several useful buildings on the map. To get additional information right click on the building and choose 'Description' menu item)</span>")}
    {SAY leader (_"Dyddyn, I know you are retired, but...")}
    {SAY peasant_leader (_"That doesn't matter now. I am going home to take my armor, I can't just stand idly while our people are about to get killed. Besides, I could recruit some folks to fight.")}
    {SAY leader (_"Thanks.")}
    {SAY peasant_leader (_"Promise me to take care of my children if I will die today and we are good.")}
    {SAY leader (_"I promise.")}
  [/event]
#enddef

#define DIALOGS_LEADER
  [event]
    name=attack
    first_time_only=no
    [filter]
      type="Spearman","Bowman"
    [/filter]
    {IF_CHANCE 40 ({SAY_RANDOM leader (_"Fight!",_"Attack!",_"Charge!",_"Forward!")})}
  [/event]
  [event]
    name=attack
    first_time_only=no
    [filter_second]
      type="Spearman","Bowman"
    [/filter_second]
    {IF_CHANCE 30 ({SAY_RANDOM leader (_"Hold your ground!",_"Hold position!",_"Hold on!",_"Stand your ground!",_"Stand!")})}
  [/event]
#enddef

#define DIALOGS_MAGE_LEADER
  {DIALOG_EVENT_SELF last_breath (id=mage_leader) (_"Who will teach my students now?")}
#enddef

#define DIALOGS_PEASANT_LEADER
  {DIALOG_EVENT_SELF last_breath (id=peasant_leader) (_"Keep your word, Lorraent.")}
#enddef

#define DIALOGS_RANDOM_PEASANTS
  [event]
    name=attack
    first_time_only=no
    [filter]
      type="Peasant"
    [/filter]
    {IF_CHANCE 70 ({SAY_RANDOM $unit.id (_"Death to the beast!",_"Death to the dragon!",_"For the homeland!",_"For Wesnoth!",_"Oorah!")})}
  [/event]
#enddef

#define DIALOGS_TAVERN_FOLKS
  {DIALOG_EVENT_SELF last_breath (id=tavern_leader) (_"This bastard is tougher than I thought.")}
  {DIALOG_EVENT die (id=tavern_guy_1) (id=tavern_leader,tavern_guy_2) (_"He was neither good pal nor fighter.")}
  {DIALOG_EVENT die (id=tavern_guy_2) (id=tavern_leader,tavern_guy_1) (_"I never actually liked him.")}
#enddef

#define DIALOGS_RANGER_AND_WOLF
  {DIALOG_EVENT attack (id=wolf) (id=ranger) (_"Bite!")}
  {DIALOG_EVENT die (id=wolf) (id=ranger) (_"Farewell, my friend.")}
  [event]
    name=die
    [filter]
      id=ranger
    [/filter]
    [if]
      [have_unit]
        id=wolf
      [/have_unit]
      [then]
        [sound]
          name=wolf-die-3.ogg
        [/sound]
        {SAY_FILTERED (id=wolf) (_"wooof")}
      [/then]
    [/if]
  [/event]
#enddef

# copy FROM_DEATH_TOLL_ARRAY to the end of TO_DEATH_TOLL_ARRAY
#define COPY_TO_THE_END FROM_DEATH_TOLL_ARRAY TO_DEATH_TOLL_ARRAY
  {VARIABLE from_index 0}
  {VARIABLE to_index ${TO_DEATH_TOLL_ARRAY}.length}
  [while]
    {VARIABLE_CONDITIONAL from_index less_than ${FROM_DEATH_TOLL_ARRAY}.length}
    [do]
      {VARIABLE {TO_DEATH_TOLL_ARRAY}[$to_index|].number ${FROM_DEATH_TOLL_ARRAY}[$from_index|].number}
      {VARIABLE {TO_DEATH_TOLL_ARRAY}[$to_index|].type ${FROM_DEATH_TOLL_ARRAY}[$from_index|].type}
      {VARIABLE_OP from_index add 1}
      {VARIABLE_OP to_index add 1}
    [/do]
  [/while]
  {CLEAR_VARIABLE from_index}
  {CLEAR_VARIABLE to_index}
#enddef

# sort DEATH_TOLL_ARRAY by the unit level. result is written to the same variable DEATH_TOLL_ARRAY
#define SORT_BY_LEVEL DEATH_TOLL_ARRAY
  {VARIABLE level 0}
  {VARIABLE temp_index 0}
  [while]
    {VARIABLE_CONDITIONAL {DEATH_TOLL_ARRAY}.length greater_than 0}
    [do]
      {VARIABLE index 0}
      [while]
        {VARIABLE_CONDITIONAL index less_than ${DEATH_TOLL_ARRAY}.length}
        [do]
          [if]
            {VARIABLE_CONDITIONAL {DEATH_TOLL_ARRAY}[$index|].level equals $level}
            [then]
              {VARIABLE temp_array[$temp_index|].number ${DEATH_TOLL_ARRAY}[$index|].number}
              {VARIABLE temp_array[$temp_index|].type ${DEATH_TOLL_ARRAY}[$index|].type}
              {VARIABLE_OP temp_index add 1}
              {CLEAR_VARIABLE {DEATH_TOLL_ARRAY}[$index|]}
            [/then]
            [else]
              {VARIABLE_OP index add 1}
            [/else]
          [/if]
        [/do]
      [/while]
      {CLEAR_VARIABLE index}
      {VARIABLE_OP level add 1}
    [/do]
  [/while]
  {CLEAR_VARIABLE level}
  {CLEAR_VARIABLE temp_index}
  {COPY_TO_THE_END temp_array {DEATH_TOLL_ARRAY}}
  {CLEAR_VARIABLE temp_array}
#enddef

# sort death_toll array by the unit race (human, undead, other) and unit level
# result is written to the sorted_death_toll array
#define SORT_DEATH_TOLL
  {CLEAR_VARIABLE sorted_death_toll}
  {VARIABLE index 0}
  [while]
    {VARIABLE_CONDITIONAL index less_than $death_toll.length}
    [do]
      [if]
        {VARIABLE_CONDITIONAL death_toll[$index|].race equals human}
        [then]
          {VARIABLE i $sorted_death_toll_human.length}
          {VARIABLE sorted_death_toll_human[$i|].number $death_toll[$index|].number}
          {VARIABLE sorted_death_toll_human[$i|].type $death_toll[$index|].type}
          {VARIABLE sorted_death_toll_human[$i|].level $death_toll[$index|].level}
          {CLEAR_VARIABLE i}
        [/then]
        [else]
          [if]
            {VARIABLE_CONDITIONAL death_toll[$index|].race equals undead}
            [then]
              {VARIABLE i $sorted_death_toll_undead.length}
              {VARIABLE sorted_death_toll_undead[$i|].number $death_toll[$index|].number}
              {VARIABLE sorted_death_toll_undead[$i|].type $death_toll[$index|].type}
              {VARIABLE sorted_death_toll_undead[$i|].level $death_toll[$index|].level}
              {CLEAR_VARIABLE i}
            [/then]
            [else]
              {VARIABLE i $sorted_death_toll_other.length}
              {VARIABLE sorted_death_toll_other[$i|].number $death_toll[$index|].number}
              {VARIABLE sorted_death_toll_other[$i|].type $death_toll[$index|].type}
              {VARIABLE sorted_death_toll_other[$i|].level $death_toll[$index|].level}
              {CLEAR_VARIABLE i}
            [/else]
          [/if]
        [/else]
      [/if]
      {VARIABLE_OP index add 1}
    [/do]
  [/while]

  {SORT_BY_LEVEL sorted_death_toll_human}
  {SORT_BY_LEVEL sorted_death_toll_undead}
  {SORT_BY_LEVEL sorted_death_toll_other}

  {COPY_TO_THE_END sorted_death_toll_human sorted_death_toll}
  {COPY_TO_THE_END sorted_death_toll_undead sorted_death_toll}
  {COPY_TO_THE_END sorted_death_toll_other sorted_death_toll}

  {CLEAR_VARIABLE index}
  {CLEAR_VARIABLE sorted_death_toll_human}
  {CLEAR_VARIABLE sorted_death_toll_undead}
  {CLEAR_VARIABLE sorted_death_toll_other}
#enddef

# formats sorted_death_toll array and stores result in formatted_death_toll variable
# formatted_death_toll is the final version of the death toll, which should be shown to the player
#define FORMAT_DEATH_TOLL
  {VARIABLE index 0}
  {VARIABLE total_number 0}
  [while]
    [variable]
      name=index
      less_than=$sorted_death_toll.length
    [/variable]
    [do]
      {VARIABLE formatted_death_toll_array[$index|].value "$sorted_death_toll[$index|].type - $sorted_death_toll[$index|].number"}
      {VARIABLE_OP total_number add $sorted_death_toll[$index|].number}
      {VARIABLE_OP index add 1}
    [/do]
  [/while]
  [set_variable]
    name=formatted_death_toll
    [join]
      variable=formatted_death_toll_array
      key=value
      separator="
"
    [/join]
  [/set_variable]
  {VARIABLE formatted_death_toll "<span size='large'>Death toll (unit type - number)</span>
$formatted_death_toll
Total - $total_number"}

  {CLEAR_VARIABLE index}
  {CLEAR_VARIABLE total_number}
  {CLEAR_VARIABLE formatted_death_toll_array}
#enddef

# create top_dealers array with information about TOP_N number of units, which dealt the maximum damage to the dragon
#define CALCULATE_TOP_DAMAGE_DEALERS TOP_N
  {CLEAR_VARIABLE top_dealers}

  # copy id and damage_dealt to units_damage_dealt array
  {VARIABLE index 0}
  [while]
    [variable]
      name=index
      less_than=$special_unit_ids.length
    [/variable]
    [do]
      {VARIABLE units_damage_dealt[$index|].id $special_unit_ids[$index|].id}
      {VARIABLE units_damage_dealt[$index|].damage_dealt $$special_unit_ids[$index|].id|_damage_dealt|}
      {VARIABLE_OP index add 1}
    [/do]
  [/while]
  {VARIABLE index 0}
  [while]
    [variable]
      name=index
      less_than=$unit_id_counter
    [/variable]
    [do]
      {VARIABLE temp_index $units_damage_dealt.length}
      {VARIABLE units_damage_dealt[$temp_index|].id unit_id_$index|}
      {VARIABLE units_damage_dealt[$temp_index|].damage_dealt $unit_id_$index|_damage_dealt|}
      {CLEAR_VARIABLE temp_index}
      {VARIABLE_OP index add 1}
    [/do]
  [/while]

  # create top_dealers array with units information, using: units_damage_dealt array, [store_unit] if it is alive or
  # <unit_id>_necrologue variable if it is dead
  {VARIABLE top_dealers_index 0}
  [while]
    [variable]
      name=top_dealers_index
      less_than={TOP_N}
    [/variable]
    [do]
      [if]
        [variable]
          name=units_damage_dealt.length
          greater_than=0
        [/variable]
        [then]
          {VARIABLE index 0}
          {VARIABLE max_damage_dealt -1}
          [while]
            [variable]
              name=index
              less_than=$units_damage_dealt.length
            [/variable]
            [do]
              [if]
                [variable]
                  name=units_damage_dealt[$index|].damage_dealt
                  greater_than=$max_damage_dealt
                [/variable]
                [then]
                  {VARIABLE max_index $index}
                  {VARIABLE max_id $units_damage_dealt[$index|].id|}
                  {VARIABLE max_damage_dealt $units_damage_dealt[$index|].damage_dealt|}
                [/then]
              [/if]
              {VARIABLE_OP index add 1}
            [/do]
          [/while]
          {CLEAR_VARIABLE units_damage_dealt[$max_index|]}
          [if]
            [have_unit]
              id=$max_id
            [/have_unit]
            [then]
              [store_unit]
                [filter]
                  id=$max_id
                [/filter]
                kill=no
                variable=max_store
              [/store_unit]
              {VARIABLE top_dealers[$top_dealers_index].damage_dealt $$max_id|_damage_dealt|}
              {VARIABLE top_dealers[$top_dealers_index].name $max_store.name}
              {VARIABLE top_dealers[$top_dealers_index].type $max_store.type}
              {VARIABLE top_dealers[$top_dealers_index].status "alive"}
              {VARIABLE_OP top_dealers_index add 1}
              {CLEAR_VARIABLE max_store}
            [/then]
            [else]
              [if]
                [variable]
                  name=$max_id|_necrologue.id
                  equals=$max_id
                [/variable]
                [then]
                  {VARIABLE top_dealers[$top_dealers_index].damage_dealt $$max_id|_damage_dealt|}
                  {VARIABLE top_dealers[$top_dealers_index].name $$max_id|_necrologue.name}
                  {VARIABLE top_dealers[$top_dealers_index].type $$max_id|_necrologue.type}
                  {VARIABLE top_dealers[$top_dealers_index].status "dead"}
                  {VARIABLE_OP top_dealers_index add 1}
                [/then]
              [/if]
            [/else]
          [/if]
        [/then]
        [else]
          {VARIABLE top_dealers[$top_dealers_index].damage_dealt "----"}
          {VARIABLE top_dealers[$top_dealers_index].name "--------------"}
          {VARIABLE top_dealers[$top_dealers_index].type "--------------"}
          {VARIABLE top_dealers[$top_dealers_index].status "-----"}
          {VARIABLE_OP top_dealers_index add 1}
        [/else]
      [/if]
    [/do]
  [/while]
  {CLEAR_VARIABLE units_damage_dealt}
  {CLEAR_VARIABLE index}
  {CLEAR_VARIABLE top_dealers_index}
  {CLEAR_VARIABLE max_index}
  {CLEAR_VARIABLE max_id}
  {CLEAR_VARIABLE max_damage_dealt}
#enddef

# formats top_dealers array and stores result in formatted_top_dealers variable
# formatted_top_dealers is the final version of the top dealers information, which should be shown to the player
#define FORMAT_TOP_DAMAGE_DEALERS
  {VARIABLE index 0}
  [while]
    [variable]
      name=index
      less_than=$top_dealers.length
    [/variable]
    [do]
      {VARIABLE formatted_top_dealers_array[$index|].value "$top_dealers[$index|].type $top_dealers[$index|].name ($top_dealers[$index|].status) - $top_dealers[$index|].damage_dealt"}
      {VARIABLE_OP index add 1}
    [/do]
  [/while]
  [set_variable]
    name=formatted_top_dealers
    [join]
      variable=formatted_top_dealers_array
      key=value
      separator="
"
    [/join]
  [/set_variable]
  {VARIABLE formatted_top_dealers "<span size='large'>Top $top_dealers.length damage dealers (unit - damage)</span>
$formatted_top_dealers
"}

  {CLEAR_VARIABLE index}
  {CLEAR_VARIABLE formatted_top_dealers_array}
#enddef

# show death toll and top 10 damage dealers information
#define SHOW_STATISTICS
  {SORT_DEATH_TOLL}
  {FORMAT_DEATH_TOLL}
  {CALCULATE_TOP_DAMAGE_DEALERS 10}
  {FORMAT_TOP_DAMAGE_DEALERS}
  {ECHO "<tt>$formatted_death_toll|

$formatted_top_dealers|</tt>"}
  {CLEAR_VARIABLE formatted_death_toll}
  {CLEAR_VARIABLE formatted_top_dealers}
#enddef

# store the Lorraent's decision to the DECISION_VARIABLE. this macros is used only once, created for readability
#define MAKE_DECISION DECISION_VARIABLE
  {VARIABLE decision_id 0}
  [if]
    [have_unit]
      id=ranger # Vygwyn
    [/have_unit]
    [then]
      {VARIABLE_OP decision_id add 1}
    [/then]
  [/if]
  [if]
    [have_unit]
      id=mage_adept # Aethonnyn
    [/have_unit]
    [then]
      {VARIABLE_OP decision_id add 2}
    [/then]
  [/if]
  [if]
    [have_unit]
      id=dark_adept # Merissa
    [/have_unit]
    [then]
      {VARIABLE_OP decision_id add 4}
    [/then]
  [/if]

  [switch]
    variable=decision_id
    [case]
       value=1
       {VARIABLE decision _"He ordered Vygwyn and two of his best soldiers to bring the book to the Great Academy of Magic in the Isle of Alduin."}
    [/case]
    [case]
       value=2
       {VARIABLE decision _"He ordered Aethonnyn and two of his best soldiers to bring the book to the Great Academy of Magic in the Isle of Alduin."}
    [/case]
    [case]
       value=4
       {VARIABLE decision _"He ordered Merissa and two of his best soldiers to bring the book to the Great Academy of Magic in the Isle of Alduin."}
    [/case]
    [case]
       value=3
       {VARIABLE decision _"He ordered Vygwyn and Aethonnyn to bring the book to the Great Academy of Magic in the Isle of Alduin."}
    [/case]
    [case]
       value=5
       {VARIABLE decision _"He ordered Vygwyn and Merissa to bring the book to the Great Academy of Magic in the Isle of Alduin."}
    [/case]
    [case]
       value=6
       {VARIABLE decision _"He ordered Aethonnyn and Merissa to bring the book to the Great Academy of Magic in the Isle of Alduin."}
    [/case]
    [case]
       value=7
       {VARIABLE decision _"He ordered Vygwyn, Aethonnyn and Merissa to bring the book to the Great Academy of Magic in the Isle of Alduin."}
    [/case]
    [else]
      # value=0
      {VARIABLE decision _"He decided to take the book and keep it in secret."}
    [/else]
  [/switch]

  {CLEAR_VARIABLE decision_id}
#enddef

# create the short story about the city and the characters after the incident and store it in the ending_description variable
#define CREATE_ENDING_DESCRIPTION
  {CLEAR_VARIABLE ending_description_array}
  {VARIABLE ending_description_array[0].value (_"The dragon has been defeated. Even while dead it still looks horrendous.")}
  {VARIABLE ending_description_array[1].value (_"Many brave men have sacrificed their lives to kill the beast. After the funerals, Lorraent ordered to build a monument to carve their feat into the stone.")}
  [if]
    [have_unit]
      id=mage_leader # Rheoran
    [/have_unit]
    [then]
      {VARIABLE ending_description_array[2].value (_"A few days later, Rheoran told Lorraent the sad truth. A year and a half ago, Rheoran visited the Great Academy of Magic in the Isle of Alduin. He was given an ancient book written in an old dialect. His task was to translate the book. The work was almost done, but there were a few sentences he couldn't understand. He was reading them again and again many times, loudly and angry. He couldn't understand the meaning of those words. But now he can see the whole picture - the words from that book were a spell that has waken the dragon from his sleep.")}
      [if]
        {VARIABLE_CONDITIONAL mages_school_state not_equals $village_burned_state}
        [then]
          {VARIABLE ending_description_array[3].value (_"The next day, Rheoran took the book and disappeared. Perhaps, he went to the Isle of Alduin. He never returned back, and Lorraent didn't know what happened to him.")}
        [/then]
        [else]
          {VARIABLE ending_description_array[3].value (_"The book was hidden in the school of mages, and now it is burned. The next day, Rheoran disappeared. Perhaps, he went to the Isle of Alduin. He never returned back, and Lorraent didn't know what happened to him.")}
        [/else]
      [/if]
    [/then]
    [else]
      {VARIABLE ending_description_array[2].value (_"Once, Lorraent heard a rumor, that one of the mage students saw Rheoran reading a strange fancy book. When the student asked Rheoran about the book, the mentor became angry and told the curious young man to keep his mouth shut. Rheoran has never told about that book to anyone.")}
      [if]
        {VARIABLE_CONDITIONAL mages_school_state not_equals $village_burned_state}
        [then]
          {MAKE_DECISION decision}
          {VARIABLE ending_description_array[3].value (_"Lorraent searched for the book and found it in the school of mages. It was written in an unknown language. His first thought was to burn the book, but who knows what magic is placed within the book. $decision")}
        [/then]
        [else]
          {VARIABLE ending_description_array[3].value (_"Lorraent searched for the book, but didn't succeed. Probably, the book was burned in the school of mages. If Rheoran was alive.. But the old man was killed fighting the dragon. Time passed and Lorraent forget about that rumor.")}
        [/else]
      [/if]
    [/else]
  [/if]
  {VARIABLE ending_description_array[4].value (_"It took many years for the town to recover from the incident. The news about the dragon's death spread by throughout the entirety of Wesnoth. Dragonfall - that's how people started calling the town since then. Eventually, as the story became a legend, the town was officially renamed that way.")}

  [set_variable]
    name=ending_description
    [join]
      variable=ending_description_array
      key=value
      # important. there should be whitespaces in the separator string to show paragraphs
      separator="
    
"
    [/join]
  [/set_variable]
  {CLEAR_VARIABLE ending_description_array}
#enddef

# show the ending dialog when the dragon is killed
#define ENDING_DIALOG
  [event]
    name=last_breath
    [filter]
      id=dragon
    [/filter]

    {VARIABLE to_x $unit.x}
    {VARIABLE to_y $unit.y}

    # next calculations are based on the map size x=50, y=48
    # dragon by default moves 7 hexes south and 5 hexes east
    # both directions are positive because zero points of coordinates is the north-west corner
    # but if it is already near south or east boundary, it will go to the opposite direction
    [if]
      {VARIABLE_CONDITIONAL unit.x less_than_equal_to 43}
      [then]
        {VARIABLE dead_dragon_image "units/monsters/ancient-dragon-death-81.png"}
        {VARIABLE_OP to_x add 7}
      [/then]
      [else]
        {VARIABLE dead_dragon_image "units/monsters/ancient-dragon-death-81.png~FL(horiz)"}
        {VARIABLE_OP to_x sub 7}
      [/else]
    [/if]
    [if]
      {VARIABLE_CONDITIONAL unit.y less_than_equal_to 43}
      [then]
        {VARIABLE_OP to_y add 5}
      [/then]
      [else]
        {VARIABLE_OP to_y sub 5}
      [/else]
    [/if]

    [sound]
      name=dragon-roar.ogg
    [/sound]
    {SAY leader (_"Is it flying away?")}
    [move_unit]
      id=dragon
      to_x=$to_x
      to_y=$to_y
    [/move_unit]

    [store_unit]
      [filter]
        id=dragon
      [/filter]
      kill=no
      variable=dragon_store
    [/store_unit]
    [kill]
      id=dragon
      animate=yes
      fire_event=no
    [/kill]
    [sound]
      name=rumble.ogg
    [/sound]
    # not using to_x and to_y because it may be occupied and the dragon stopped at the other hex
    [item]
      halo=$dead_dragon_image
      x=$dragon_store.x
      y=$dragon_store.y
    [/item]

    {CREATE_ENDING_DESCRIPTION}
    {ECHO $ending_description}

    {SHOW_STATISTICS}

    [endlevel]
      result=victory
    [/endlevel]
  [/event]
#enddef

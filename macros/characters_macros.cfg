#textdomain wesnoth-Dragon_Fight

# Important note
# All unit ids in this scenario must follow the variable naming rule in order for final statistics to work properly:
#   - variable name should begin with a letter
#   - variable names should only contain letters (not accented) and numbers and the underscore _ character
# This restriction is ensured in:
#    - "characters_macros.cfg" file with units which are created within [side] tag or by special events
#    - "dragon_fight.cfg" file within "recruit" event
# Format of unit id is "unit_id_<N>", where N is an integer number greater or equal to zero.
# E.g. "unit_id_123". Variable "unit_id_counter" is used to hold the N value.

#define TRAIT_DULL_SIGHT
    [trait]
        id=dull_sight
        male_name= _"dull sight"
        female_name= _"female^dull sight"
        [effect]
            apply_to=attack
            range=ranged
            increase_damage=-2
        [/effect]
    [/trait]
#enddef

#define LOYAL_ON_EASY
  upkeep={ON_DIFFICULTY loyal full full}
  #ifdef EASY
    overlays="misc/loyal-icon.png"
  #endif
#enddef

# initialize final statistics variables for units which not follow the "unit_id_<N>" id rule
#define SPECIAL_UNIT_CREDITS_SUPPORT UNIT_ID
  {VARIABLE {UNIT_ID}_damage_dealt 0}
  {VARIABLE special_unit_ids[$special_unit_ids.length|].id {UNIT_ID}}
#enddef

#define UNDEAD_UNIT TYPE X Y ID
  {NAMED_UNIT 1 {TYPE} {X} {Y} {ID} ""
  (
    animate=yes
    facing=sw
    random_traits=yes
    {LOYAL_ON_EASY}
  )}
  {SPECIAL_UNIT_CREDITS_SUPPORT {ID}}
#enddef

#define TOWN_UNIT TYPE X Y FACING
  [unit]
    side=1
    id=unit_id_$unit_id_counter|
    type={TYPE}
    x={X}
    y={Y}
    facing={FACING}
    generate_name=yes
    random_traits=yes
    random_gender=yes
    upkeep=full
  [/unit]
  {VARIABLE unit_id_$unit_id_counter|_damage_dealt 0}
  {VARIABLE_OP unit_id_counter add 1}
#enddef

#define PEASANT_UNIT X Y
  [unit]
    side=1
    id=unit_id_$unit_id_counter|
    type="Peasant"
    x={X}
    y={Y}
    generate_name=yes
    random_traits=yes
    random_gender=yes
    upkeep=full
  [/unit]
  {VARIABLE unit_id_$unit_id_counter|_damage_dealt 0}
  {VARIABLE_OP unit_id_counter add 1}
#enddef

#define TAVERN_UNIT TYPE X Y ID NAME FACING
  {NAMED_UNIT 1 {TYPE} {X} {Y} {ID} {NAME}
  (
    animate=yes
    facing={FACING}
    random_traits=yes
    upkeep=full
  )}
  {SPECIAL_UNIT_CREDITS_SUPPORT {ID}}
#enddef

#define UNIT_LEADER
  [leader]
    id=leader
    {ON_DIFFICULTY (type="General") (type="Lieutenant") (type="Lieutenant")}
    name=_"Lorraent"
    unrenamable=yes
    [modifications]
      {TRAIT_RESILIENT}
      {TRAIT_INTELLIGENT}
    [/modifications]
    extra_recruit="Spearman", "Bowman"
    x,y=20,9
    facing=se
  [/leader]
#enddef

#define UNIT_PEASANT_LEADER
  [leader]
    id=peasant_leader
    type="Peasant"
    name= _"Dyddyn"
    unrenamable=yes
    [modifications]
      {TRAIT_STRONG}
      {TRAIT_RESILIENT}
    [/modifications]
    extra_recruit="Peasant"
    # Dyddyn is level 1 to filter him out from the armory_event. and show that his is not an ordinary peasant
    level=1
    max_hitpoints=36
    max_experience=60
    advances_to="Pikeman"
    x,y=21,21
    facing=se
  [/leader]
#enddef

#define UNIT_MAGE_LEADER
  [leader]
    id=mage_leader
    type="Red Mage"
    name= _"Rheoran"
    unrenamable=yes
    [modifications]
      {TRAIT_INTELLIGENT}
      #ifdef EASY
        {TRAIT_STRONG}
      #endif
      #ifdef NORMAL
        {TRAIT_DULL_SIGHT}
      #endif
      #ifdef HARD
        {TRAIT_AGED}
        {TRAIT_DULL_SIGHT}
      #endif
    [/modifications]
    extra_recruit="Mage"
    x,y=42,21
    facing=sw
  [/leader]
#enddef

# starting town guardians
#define UNITS_TOWN_GUARD
  {TOWN_UNIT "Spearman" 20 15 se}
  {TOWN_UNIT "Bowman" 11 13 sw}
  {TOWN_UNIT "Bowman" 29 13 se}
  #ifdef EASY
    {TOWN_UNIT "Spearman" 11 7 nw}
    {TOWN_UNIT "Spearman" 29 7 ne}
  #endif
  # note that this unit is participating in the starting dialog
  {TOWN_UNIT "Spearman" 20 4 se}
#enddef

# starting peasants
#define UNITS_PEASANTS
  {PEASANT_UNIT 11 22}
  {PEASANT_UNIT 18 19}
  {PEASANT_UNIT 27 23}
  {PEASANT_UNIT 30 26}
  {PEASANT_UNIT 21 31}
  #ifdef EASY
    {PEASANT_UNIT 23 30}
    {PEASANT_UNIT 31 25}
    {PEASANT_UNIT 26 21}
  #endif
#enddef

# Aethonnyn and Merissa units + their last breath events
#define UNITS_MAGES_COUPLE
  [unit]
    type="Mage"
    id=mage_adept
    x,y={ON_DIFFICULTY (35,30) (33,39) (33,39)}
    facing=ne
    name= _"Aethonnyn"
    unrenamable=yes
    gender=male
    upkeep=full
    [modifications]
      {TRAIT_STRONG}
      {TRAIT_INTELLIGENT}
    [/modifications]
  [/unit]
  {SPECIAL_UNIT_CREDITS_SUPPORT mage_adept}
  [unit]
    type="Dark Adept"
    id=dark_adept
    x,y={ON_DIFFICULTY (36,29) (34,38) (34,38)}
    facing=sw
    name= _"Merissa"
    unrenamable=yes
    gender=female
    upkeep=full
    [modifications]
      {TRAIT_QUICK}
      {TRAIT_RESILIENT}
    [/modifications]
  [/unit]
  {SPECIAL_UNIT_CREDITS_SUPPORT dark_adept}
  [event]
    name=last_breath
    [filter]
      id=mage_adept
    [/filter]
    [if]
      [have_unit]
        id=dark_adept
      [/have_unit]
      [then]
        {SAY mage_adept (_"Arghh it hurts..")}
        {SAY dark_adept (_"Don't die..")}
      [/then]
      [else]
        {SAY mage_adept (_"I am coming to you my love..")}
      [/else]
    [/if]
  [/event]
  [event]
    name=last_breath
    [filter]
      id=dark_adept
    [/filter]
    [if]
      [have_unit]
        id=mage_adept
      [/have_unit]
      [then]
        {SAY dark_adept (_"Oh no. I am dying..")}
        {SAY mage_adept (_"MERISSA!")}
      [/then]
      [else]
        {SAY dark_adept (_"I am coming to you my love..")}
      [/else]
    [/if]
  [/event]
#enddef

#define UNITS_UNDEAD
  {UNDEAD_UNIT "Walking Corpse" 45 7 undead_1}
  {UNDEAD_UNIT "Skeleton Archer" 44 5 undead_2}
  {UNDEAD_UNIT "Skeleton" 46 5 undead_3}
  {UNDEAD_UNIT {ON_DIFFICULTY "Bone Shooter" "Skeleton Archer" "Skeleton Archer"} 45 4 undead_4}
  {UNDEAD_UNIT "Walking Corpse" 43 4 undead_5}
#enddef

#define UNITS_RANGER_AND_WOLF
  {NAMED_UNIT 1 {ON_DIFFICULTY "Great Wolf" "Wolf" "Wolf"} 6 34 wolf (_"Buddy")
  (
    unrenamable=yes
    animate=yes
    facing=sw
    random_traits=yes
    {LOYAL_ON_EASY}
  )}
  {SPECIAL_UNIT_CREDITS_SUPPORT wolf}
  [sound]
    name=wolf-growl-3.ogg
  [/sound]
  {SAY wolf (_"woof rrr")}
  {NAMED_UNIT 1 "Ranger" 5 34 ranger (_"Vygwyn")
  (
    unrenamable=yes
    animate=yes
    facing=se
    random_traits=yes
    {LOYAL_ON_EASY}
  )}
  {SPECIAL_UNIT_CREDITS_SUPPORT ranger}
#enddef

# hire "tavern folks" - create corresponding units
#define UNITS_TAVERN_FOLKS
  {SPECIAL_UNIT_CREDITS_SUPPORT tavern_leader}
  {TAVERN_UNIT {ON_DIFFICULTY "Rogue" "Thief" "Thief"} 24 7 tavern_guy_1 (_"Sercyn") se}
  {TAVERN_UNIT "Thug" 26 7 tavern_guy_2 (_"Caebryn") sw}
#enddef

# "tavern leader" move out - simply create a corresponding unit
#define TAVERN_LEADER_MOVE_OUT
  {NAMED_UNIT 1 "Bandit" 25 7 tavern_leader (_"Owodd")
  (
    unrenamable=yes
    upkeep=full
    animate=yes
    facing=s
    [modifications]
      {TRAIT_QUICK}
      {TRAIT_STRONG}
    [/modifications]
  )}
#enddef

# "tavern leader" move in - kill the unit. when it is hired, this macros shouldn't be called, so the unit stays on the map
#define TAVERN_LEADER_MOVE_IN
  [kill]
    id=tavern_leader
    animate=no
    fire_event=no
  [/kill]
  [move_unit_fake]
    type="Bandit"
    side=1
    x=25,25
    y=7,8
  [/move_unit_fake]
#enddef

# this macro ends with "tavern leader" (aka main bandit) moving in the tavern. so, it is useful in cases when it is
# beforehand known that "tavern folks" wouldn't be hired
#define DIALOG_IN_TAVERN NESTED_WML
  {TAVERN_LEADER_MOVE_OUT}
  {NESTED_WML}
  {TAVERN_LEADER_MOVE_IN}
#enddef
